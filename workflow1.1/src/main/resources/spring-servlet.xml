<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xmlns:p="http://www.springframework.org/schema/p"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
            http://www.springframework.org/schema/beans/spring-beans.xsd  
            http://www.springframework.org/schema/mvc  
            http://www.springframework.org/schema/mvc/spring-mvc.xsd  
            http://www.springframework.org/schema/context  
            http://www.springframework.org/schema/context/spring-context.xsd"  
    default-lazy-init="true">  
    <!-- 通过mvc:resources设置静态资源，这样servlet就会处理这些静态资源，而不通过控制器 -->  
    <!-- 设置不过滤内容，比如:css,jquery,img 等资源文件 -->  
     <mvc:resources location="/*.html" mapping="/**.html" />  
    <mvc:resources location="/css/*" mapping="/css/**" />  
    <mvc:resources location="/js/*" mapping="/js/**" />  
    <mvc:resources location="/echarts/*" mapping="/echarts/**" />  
    <mvc:resources location="/amazeui/*" mapping="/amazeui/**" />  
    <mvc:resources location="/angular/*" mapping="/angular/**" />  
    <mvc:resources location="/images/*" mapping="/images/**" />   
    <!-- 添加注解驱动 -->  
     <context:annotation-config />
     <mvc:annotation-driven /> 
    <!-- <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" /> 
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean"> 
        <property name="favorPathExtension" value="false" /> 
        <property name="favorParameter" value="false" /> 
        <property name="ignoreAcceptHeader" value="false" />
        <property name="mediaTypes" > *=*/*
             <value> atom=application/atom+xml html=text/html json=application/json </value>
        </property> 
     </bean> -->
    <!-- 默认扫描的包路径 -->  
    <context:component-scan base-package="com.cyb" />  
    <!-- mvc:view-controller可以在不需要Controller处理request的情况，转向到设置的View -->  
    <!-- 像下面这样设置，如果请求为/，则不通过controller，而直接解析为/index.jsp -->  
    <!-- <mvc:view-controller path="/" view-name="index" />  --> 
     <!-- <bean id="messageAdapter"
	class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	<property name="messageConverters">
		<list>
			 <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
		        <property name="supportedMediaTypes">  
		            <list>  
		                <value>text/plain;charset=utf-8</value>  
		                <value>text/json;charset=utf-8</value>  
		                <value>application/json;charset=utf-8</value>  
		            </list> 
		         </property>  
		    </bean>  
		 </list>
	 </property>
	</bean>  -->
	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->  
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>  
  
    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->  
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="mappingJacksonHttpMessageConverter" /><!-- json转换器 -->  
            </list>  
        </property>  
    </bean>  
    <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">  
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>  
        <!-- 配置jsp路径前缀 -->  
        <property name="prefix" value="/"></property>  
        <!-- 配置URl后缀 -->  
        <property name="suffix" value=".jsp"></property>  
    </bean>    
</beans>  