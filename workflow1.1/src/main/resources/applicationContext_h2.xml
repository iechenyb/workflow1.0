<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/mvc
			http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-2.5.xsd 
			http://www.springframework.org/schema/task
			http://www.springframework.org/schema/task/spring-task-3.1.xsd
			http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			">
<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	  <property name="location" value="classpath:App.properties" />
	</bean>
<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  destroy-method="close">       
    <property name="driverClassName" value="${h2.driverClassName}" />      
    <property name="url" value="${h2.url}" /> 
    <property name="username" value="${h2.username}" />      
    <property name="password" value="${h2.password}" />      
</bean>  
 <bean id="sessionFactory" 
        class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"> 
        <property name="dataSource"> 
            <ref bean="dataSource" /> 
        </property> 
        <!-- <property name="configLocations"> 
            <value> classpath:hibernate.cfg.xml</value> 
           <value> classpath:ehcache.xml</value>
         </property> -->
        <property name="hibernateProperties"> 
            <props> 
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop> 
                <prop key="hibernate.show_sql">false</prop> 
                <prop key="connection.autocommit">true</prop>
                <prop key="hibernate.format_sql">false</prop>
                <!-- 配置二级缓存 -->
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<!-- 由于查询的缓存命中率很低，所以我们关掉查询时的二级缓存 -->
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<!-- 配置二级缓存的相应的类 -->
				<prop key=" hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop> 
				<!-- 指定使用OSCache这个实现-->  
       			<!-- <prop name="cache.provider_class">org.hibernate.cache.OSCacheProvider</pro>   -->
        		<!-- 打开统计信息-->  
        		<!-- <pro name="generate_statistics">true</pro>    -->
				<!-- 由于spring也使用了Ehcache, 保证双方都使用同一个缓存管理器 -->
				<!-- <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</prop> -->
			</props> 
        </property> 
		<!-- 使用 mappingDirectoryLocations 属性可以指定某目录下的 hbm 文件（“classpath*:”指向 WEB-INF/classes 目录） -->
            <property name="mappingDirectoryLocations">
            <list>
                <value>
                  /com/cyb/*.java
                </value>
            </list>
        </property>

<!-- 补充：使用 mappingResources 属性要一个一个写 hbm 文件（“classpath*:”指向 WEB-INF/classes 目录） -->
     <property name="mappingResources">
         <list>
            <value>jbpm.repository.hbm.xml </value> 
			<value>jbpm.execution.hbm.xml </value> 
			<value>jbpm.history.hbm.xml </value> 
			<value>jbpm.task.hbm.xml</value> 
			<value>jbpm.identity.hbm.xml </value> 
        </list>
    </property>
     <!-- 引入外部配置文件，将jbpm和CRM的配置信息放到一起 -->  
    <!-- <property name="configLocation" value="classpath:jbpm.hibernate.cfg.xml"></property> -->  
  </bean>
  <!-- cacheManager, 指定ehcache.xml的位置 -->
    <!-- <bean id="cacheManagerEhcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation">
            <value>classpath:ehcache.xml</value>
        </property>
        由于hibernate也使用了Ehcache, 保证双方都使用同一个缓存管理器
        <property name="shared" value="true"/>
    </bean> -->
 <!-- 配置事务管理器 -->
<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
   <property name="sessionFactory">
       <ref bean="sessionFactory"/>
   </property>
</bean>
<!--  配置事务传播特性 -->
<tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
       <tx:method name="add*" propagation="REQUIRED"/>
      <tx:method name="save*" propagation="REQUIRED"/>
      <tx:method name="del*" propagation="REQUIRED"/>
      <tx:method name="update*" propagation="REQUIRED"/>
      <tx:method name="add*" propagation="REQUIRED"/>
      <tx:method name="find*" propagation="REQUIRED"/>
      <tx:method name="get*" propagation="REQUIRED"/>
      <tx:method name="apply*" propagation="REQUIRED"/>
    </tx:attributes>
</tx:advice>
<!--  配置参与事务的类 -->
<aop:config>
<aop:pointcut id="allTestServiceMethod" expression="execution(* com.cyb.service.*.*(..))"/>
<aop:advisor pointcut-ref="allTestServiceMethod" advice-ref="txAdvice" />
</aop:config>

<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
     <property name="dataSource">
         <ref bean="dataSource" />
     </property>
</bean>
</beans>
